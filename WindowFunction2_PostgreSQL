这次将讲解 window function 中 用于返回 数字的 3个语句：
ROW_NUMBER, RANK, DENSE_RANK


===================================================================================================
先来看表：

Runners:
-------------------------------------------------------
|    name   |   weight   |    country    |    time    |
-------------------------------------------------------
|    andy   |     50     |      UK       |    101     |
-------------------------------------------------------
|    bob    |     100    |      UK       |    103     |
-------------------------------------------------------
|   cedric  |     50     |    France     |    104     |
-------------------------------------------------------
|    dave   |     70     |    Germany    |    104     |
-------------------------------------------------------
|    eric   |     50     |    France     |    108     |
-------------------------------------------------------

问题：
1. 如何 根据 'time'列的升序， 对 Runners 表中的 各行 添加 行序号（行序号之间不能有重复）？ (ROW_NUMBER)
2. 如何 根据 'time'列的升序， 对 Runners 表中的 各行 添加 行序号（'time'相同的 行，序号要相同，且，如果出现并列的情况，如 3, 3，则这之后的 序号 为 5，而不是 4）？ (RANK)
3. 如何 根据 'time'列的升序， 对 Runners 表中的 各行 添加 行序号（'time'相同的 行，序号要相同，且，如果出现并列的情况，如 3, 3，则这之后的 序号 为 4，而不是 5）？ (DENSE_RANK)

我们来跑一下下面的代码，感受下区别：
SELECT name, time,
    ROW_NUMBER() OVER (ORDER BY time),
    RANK() OVER (ORDER BY time),
    DENSE_RANK() OVER (ORDER BY time),
FROM Runners ORDER BY time;

-------------------------------------------------------------------
|    name   |    time    |  ROW_NUMBER  |   RANK    | DENSE_RANK  |
-------------------------------------------------------------------
|    andy   |    101     |      1       |     1     |     1       |
-------------------------------------------------------------------
|    bob    |    103     |      2       |     2     |     2       |
-------------------------------------------------------------------
|   cedric  |    104     |      3       |     3     |     3       |
-------------------------------------------------------------------
|    dave   |    104     |      4       |     3     |     3       |
-------------------------------------------------------------------
|    eric   |    108     |      5       |     5     |     4       |
-------------------------------------------------------------------













